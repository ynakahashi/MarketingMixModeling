seed = 123)
# fit_01 <- stan(file = '/Users/nakahashi/Desktop/Git/MarketingMixModeling/HB_SSM_Sim.stan',
#                data = dat_Stan,
#                iter = 1000,
#                chains = 4,
#                seed = 123)
fit_01 <- stan(file = '/Users/yn250006/Desktop/Git/MarketingMixModeling/HB_SSM_Sim.stan',
data = dat_Stan,
iter = 1000,
chains = 4,
seed = 123)
# fit_03 <- stan(file = '/Users/yn250006/Desktop/Git/MarketingMixModeling/HB_SSM_Sim.stan',
#                data = dat_Stan,
#                iter = 3000,
#                control = list(max_treedepth = 15),
#                chains = 4,
#                seed = 123)
## サンプルを抽出する
res_01 <- rstan::extract(fit_01)
## 該当するパラメータを取り出す
ests <- summary(fit_01)$summary
t0_rows    <- rownames(ests)[grep("state_t0", rownames(ests))]
state_rows <- rownames(ests)[grep("state\\[", rownames(ests))]
b0_rows    <- rownames(ests)[grep("beta_0", rownames(ests))]
beta_rows  <- rownames(ests)[grep("beta\\[", rownames(ests))]
## 状態変数
state_par <-
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% state_rows) %>%
mutate("Area" = DF$Area_ID)
state_cmp <- data.frame(
True = State,
Est = state_par$mean,
Area = as.factor(state_par$Area),
YM = DF$YM
)
state_cmp %>%
gather("Var", "Val", -c(Area, YM)) %>%
ggplot(., aes(x = YM, y = Val, colour = Var)) +
geom_line() +
facet_wrap(~Area)
beta_par <-
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% beta_rows)
beta_cmp <- data.frame(
True = beta_ad,
Est = beta_par$mean
)
ggplot(beta_cmp, aes(x = True, y = Est)) +
geom_point() +
coord_fixed()
ests[rownames(ests) %in% b0_rows, "mean"]
print(mu_beta)
print(var_beta)
ests[rownames(ests) %in% b0_rows, "mean"]
print(mu_beta)
print(var_beta)
ests[rownames(ests) %in% b0_rows, "mean"]
print(mu_beta, var_beta)
print(c(mu_beta, var_beta))
print(c("a" = mu_beta, "b" = var_beta))
ests[rownames(ests) %in% b0_rows, "mean"]
print(c("mu_beta" = mu_beta, "var_beta" = var_beta))
install.packages("shinystan")
library(shinystan)
res_out <- launch_shinystan(fit_01)
re_01
res_01
fit_01
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows)
ls
ls()
print(c("state_t0" = state_t0, "var_state_t0" = var_state_t0))
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows)
print(c("state_t0" = state_t0, "var_state_t0" = var_state_t0))
DF
DF[, "True_s"]
DF[c(1, 49, 97, 145, 193), "True_s"]
DF[c(1, 49, 97, 145, 193), "True_s"]
var(DF[c(1, 49, 97, 145, 193), "True_s"])
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
bind_cols(c(state_t0, var_state_t0))
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("Est" = c(state_t0, var_state_t0))
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("True" = c(state_t0, var_state_t0)) %>%
mutate("Simulated" = c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
)
ests %>%
c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
)
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("True" = c(state_t0, var_state_t0)) %>%
mutate("Simulated" = c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
))
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("True" = c(state_t0, var_state_t0)) %>%
mutate("Simulated" = c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
))
ests %>%
data.frame %>%
select(mean) %>%
rename("Estimated" = mean)
ests %>%
data.frame %>%
select(mean) %>%
rename("Estimated" = mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("True" = c(state_t0, var_state_t0)) %>%
mutate("Simulated" = c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
)) %>%
select(Par, True, Simulated, mean)
ests %>%
data.frame %>%
select(mean) %>%
rename("Estimated" = mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("True" = c(state_t0, var_state_t0)) %>%
mutate("Simulated" = c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
)) %>%
select(Par, True, Simulated, Estimated)
head(ests)
ests %>%
data.frame %>%
select(`2.5%`, `97.5%`)
ests %>%
data.frame %>%
select("2.5%", "97.5%")
ests %>%
data.frame
ests %>%
data.frame %>%
select(X2.5., X97.5.)
ests %>%
data.frame %>%
select(X2.5., X97.5.) %>%
rename("Lower95" = X2.5.,
"Upeer95" = X97.5.)
ests %>%
data.frame %>%
select(X2.5., X97.5.) %>%
rename("Lower95" = X2.5.,
"Upeer95" = X97.5.) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
select(Par, everything())
beta_par <-
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% beta_rows)
beta_cmp <- data.frame(
True = beta_ad,
Est = beta_par$mean
)
ggplot(beta_cmp, aes(x = True, y = Est)) +
geom_point() +
coord_fixed()
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% b0_rows)
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% b0_rows) %>%
bind_cols("True" = c(mu_beta, var_beta))
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% b0_rows) %>%
bind_cols("True" = c(mu_beta, var_beta)) %>%
select(Par, everything())
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% b0_rows) %>%
bind_cols("True" = c(mu_beta, var_beta)) %>%
select(Par, True, mean)
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% beta_rows)
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% beta_rows) %>%
bind_cols("True" = beta_ad) %>%
select(Par, True, mean)
stan_trace(fit, pars = t0_rows)
stan_trace(fit_01, pars = t0_rows)
stan_trace(fit_01, pars = state_rows)
state_rows
stan_trace(fit_01, pars = state_rows[c(1, 49, 97, 145, 193)])
stan_trace(fit_01, pars = b0_rows)
stan_trace(fit_01, pars = state_rows[c(1, 49, 97, 145, 193)])
stan_trace(fit_01, pars = b0_rows)
stan_trace(fit_01, pars = beta_rows)
stan_trace(fit_01, pars = beta_rows, inc_warmup = T)
stan_hist(fit_01, pars = t0_rows)
stan_hist(fit_01, pars = b0_rows)
stan_hist(fit_01, pars = beta_rows)
stan_hist(fit_01, pars = beta_rows, inc_warmup = T)
stan_hist(fit_01, pars = beta_rows)
library(tidyverse)
library(ggplot2)
library(rstan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
## シードの固定
set.seed(123)
## 観測値の数
num_region  <- 5
num_month   <- 12
num_year    <- 4
data_length <- num_month * num_year
## 回帰係数
mu_beta  <- 0.5
var_beta <- 0.01
beta_ad  <- rnorm(num_region, mu_beta, sqrt(var_beta))
beta_ad_all <- rep(beta_ad, each = data_length)
## 分布の設定
# 状態変数の初期値
state_t0     <- 3
var_state_t0 <- 1
# 状態変数の分散
var_state <- 0.01
# 誤差項
var_error <- 0.01
## 説明変数X
scale_x  <- 5
zero_per <- 0.2
X <- ifelse(runif(num_region * data_length) > zero_per, 1, 0) *
rpois(num_region * data_length, scale_x)
## 状態変数
State <- matrix(0, nrow = num_region * data_length)
for (i in 1:num_region) {
for (j in 1:data_length) {
if (j == 1) {
## 1, 49, 97, 145, 193行目が各地域の先頭となる
State[(i-1) * data_length + j] <- rnorm(1, state_t0, sqrt(var_state_t0))
} else {
State[(i-1) * data_length + j] <-
State[(i-1) * data_length + j - 1] + rnorm(1, 0, sqrt(var_state))
}
}
}
## 目的変数
error <- rnorm(num_region * data_length, 0, sqrt(var_error))
Y     <- State + X * beta_ad_all + error
## 地域ごとのID
Area_ID <- 1:num_region
DF <- data.frame(
"Area_ID" = rep(Area_ID, each = data_length),
"YM" = rep(1:data_length, time = num_region),
"Y" = Y,
"X" = X,
"True_s" = State,
"True_e" = error)
DF %>%
gather("Var", "Val", -c(Area_ID, YM)) %>%
filter(Var %in% c("Y", "True_s")) %>%
ggplot(., aes(x = YM, y = Val, color = Var)) +
geom_line() +
facet_wrap(~Area_ID)
coef(lm(Y ~ X, data = DF))
results <- list()
for (i in Area_ID) {
results[[as.character(i)]] <- coef(lm(Y ~ X, data = DF, subset = Area_ID == i))
}
print(cbind(do.call("rbind", results), beta_ad))
dat_Stan <- list(N       = data_length,
K       = num_region,
Y       = DF$Y,
X       = DF$X,
Area_ID = DF$Area_ID)
fit_01 <- stan(file = '/Users/yn250006/Desktop/Git/MarketingMixModeling/HB_SSM_Sim.stan',
data = dat_Stan,
iter = 1000,
chains = 4,
seed = 123)
## サンプルを抽出する
res_01 <- rstan::extract(fit_01)
## 該当するパラメータを取り出す
ests <- summary(fit_01)$summary
t0_rows    <- rownames(ests)[grep("state_t0", rownames(ests))]
state_rows <- rownames(ests)[grep("state\\[", rownames(ests))]
b0_rows    <- rownames(ests)[grep("beta_0", rownames(ests))]
beta_rows  <- rownames(ests)[grep("beta\\[", rownames(ests))]
## 状態変数
state_par <-
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% state_rows) %>%
mutate("Area" = DF$Area_ID)
state_cmp <- data.frame(
True = State,
Est = state_par$mean,
Area = as.factor(state_par$Area),
YM = DF$YM
)
stan_trace(fit_01, pars = t0_rows)
stan_trace(fit_01, pars = state_rows[c(1, 49, 97, 145, 193)])
stan_trace(fit_01, pars = b0_rows)
stan_trace(fit_01, pars = beta_rows)
stan_trace(fit_01, pars = beta_rows, inc_warmup = T)
stan_hist(fit_01, pars = t0_rows)
stan_hist(fit_01, pars = state_rows[c(1, 49, 97, 145, 193)])
stan_hist(fit_01, pars = b0_rows)
stan_hist(fit_01, pars = beta_rows)
stan_hist(fit_01, pars = beta_rows)
state_cmp %>%
gather("Var", "Val", -c(Area, YM)) %>%
ggplot(., aes(x = YM, y = Val, colour = Var)) +
geom_line() +
facet_wrap(~Area)
ests %>%
data.frame %>%
select(mean) %>%
rename("Estimated" = mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("True" = c(state_t0, var_state_t0)) %>%
mutate("Simulated" = c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
)) %>%
select(Par, True, Simulated, Estimated)
ests %>%
data.frame %>%
select(X2.5., X97.5.) %>%
rename("Lower95" = X2.5.,
"Upeer95" = X97.5.) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
select(Par, everything())
beta_par <-
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% beta_rows)
beta_cmp <- data.frame(
True = beta_ad,
Est = beta_par$mean
)
ggplot(beta_cmp, aes(x = True, y = Est)) +
geom_point() +
coord_fixed()
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% beta_rows) %>%
bind_cols("True" = beta_ad) %>%
select(Par, True, mean)
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% b0_rows) %>%
bind_cols("True" = c(mu_beta, var_beta)) %>%
select(Par, True, mean)
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% b0_rows) %>%
bind_cols("True" = c(mu_beta, var_beta)) %>%
select(Par, True, mean)
DF %>%
gather("Var", "Val", -c(Area_ID, YM)) %>%
filter(Var %in% c("Y", "True_s")) %>%
ggplot(., aes(x = YM, y = Val, color = Var)) +
geom_line() +
facet_wrap(~Area_ID)
DF %>%
gather("Var", "Val", -c(Area_ID, YM)) %>%
filter(Var %in% c("Y", "True_s")) %>%
ggplot(., aes(x = YM, y = Val, color = Var)) +
geom_line() +
facet_wrap(~Area_ID)
DF %>%
gather("Var", "Val", -c(Area_ID, YM)) %>%
filter(Var %in% c("Y", "True_s")) %>%
ggplot(., aes(x = YM, y = Val, color = Var)) +
geom_line() +
facet_wrap(~Area_ID)
DF %>%
gather("Var", "Val", -c(Area_ID, YM)) %>%
filter(Var %in% c("Y", "True_s")) %>%
ggplot(., aes(x = YM, y = Val, color = Var)) +
geom_line() +
facet_wrap(~Area_ID)
coef(lm(Y ~ X, data = DF))
print(cbind(do.call("rbind", results), beta_ad))
state_cmp %>%
gather("Var", "Val", -c(Area, YM)) %>%
ggplot(., aes(x = YM, y = Val, colour = Var)) +
geom_line() +
facet_wrap(~Area)
ests %>%
data.frame %>%
select(mean) %>%
rename("Estimated" = mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("True" = c(state_t0, var_state_t0)) %>%
mutate("Simulated" = c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
)) %>%
select(Par, True, Simulated, Estimated)
state_cmp %>%
gather("Var", "Val", -c(Area, YM)) %>%
ggplot(., aes(x = YM, y = Val, colour = Var)) +
geom_line() +
facet_wrap(~Area)
ests %>%
data.frame %>%
select(mean) %>%
rename("Estimated" = mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
mutate("True" = c(state_t0, var_state_t0)) %>%
mutate("Simulated" = c(
mean(DF[c(1, 49, 97, 145, 193), "True_s"]),
var(DF[c(1, 49, 97, 145, 193), "True_s"])
)) %>%
select(Par, True, Simulated, Estimated)
ests %>%
data.frame %>%
select(X2.5., X97.5.) %>%
rename("Lower95" = X2.5.,
"Upeer95" = X97.5.) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% t0_rows) %>%
select(Par, everything())
ggplot(beta_cmp, aes(x = True, y = Est)) +
geom_point() +
coord_fixed()
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% beta_rows) %>%
bind_cols("True" = beta_ad) %>%
select(Par, True, mean)
ests %>%
data.frame %>%
select(mean) %>%
mutate("Par" = rownames(ests)) %>%
filter(Par %in% b0_rows) %>%
bind_cols("True" = c(mu_beta, var_beta)) %>%
select(Par, True, mean)
